generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  password  String
  role      Role      @default(ADMIN)
  isActive  Boolean   @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

enum Role {
  ADMIN
  SUPER_ADMIN
}

model Product {
  id            String   @id @default(uuid())
  name          String
  description   String   @db.Text
  price         Decimal  @db.Decimal(10, 2)
  stock         Int
  productImages Json
  createdBy     User     @relation(fields: [userId], references: [id])
  userId        String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  orderItems OrderItem[] // Relation to OrderItem
}

model Order {
  id             String      @id @default(uuid())
  customerEmail  String?
  customerPhone  String
  address        String      @db.Text
  status         OrderStatus @default(PENDING)
  trackingId     String? // Optional tracking ID, added during delivery
  totalAmount    Decimal     @db.Decimal(10, 2)
  deliveryCharge Decimal     @db.Decimal(10, 2)
  subTotal       Decimal     @db.Decimal(10, 2)
  items          OrderItem[]
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
}

model OrderItem {
  id          String  @id @default(uuid())
  productId   String // Foreign key to Product
  productName String
  price       Decimal @db.Decimal(10, 2) // Price per unit
  quantity    Int
  orderId     String // Foreign key to Order
  order       Order   @relation(fields: [orderId], references: [id])
  product     Product @relation(fields: [productId], references: [id])
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}
